name: Data Ingestion CI/CD

on:
  workflow_dispatch:

  # push:
  #   paths:
  #     - 'data_ingestion/**'
  #     - '.github/workflows/data_ingestion_ci_cd.yml'
  #   branches:
  #     - main
  #     - feature/data

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: neo-data-image   # Replace with your Docker image name
      REGISTRY: ${{ secrets.DOCKERHUB_USERNAME }} # Docker Hub registry
      S3_BUCKET_NAME: nasa-data-bucket
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: data_ingestion/
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          build-args: |
            S3_BUCKET_NAME=${{ env.S3_BUCKET_NAME }}
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          # aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_WORKFLOW_ROLE }}
          aws-region: eu-west-3  # specify your AWS region

      - name: Set up Kubernetes
        uses: eksctl/eksctl-action@v1
        with:
          cluster-name: neo-eks-cluster
          region: eu-west-3  # specify your AWS region

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/data_ingestion_deployment.yaml
          
      - name: Wait for LoadBalancer
        run: |
          kubectl wait --for=condition=available --timeout=300s service/nasa-data-ingestion-service

      - name: Get LoadBalancer URL
        run: |
          kubectl get svc data-ingestion-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'